//GILBERTN JOB (ACCT#),NOTCTLG3,                                        00010000
//*RESTART=EXECPROC.FROM,                                               00020000
// CLASS=A,MSGCLASS=X                                                   00030000
//ASMH EXEC PGM=IEV90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)           00040000
*********************************************************************** 00050000
*                                                                     * 00060000
*        REPLACEMENT FOR CZX3PSRC                                     * 00070000
*                                                                     * 00080000
*        1.  PREVENTS "NOT CATLG 2" CONDITIONS                        * 00090001
*        2.  VERIFY VSAM DATA SETS                                    * 00100001
*                                                                     * 00110000
*        WARNING: The detection of NOT CATLG 2 situations only        * 00120001
*        occurs when the program's own STEP name is "FROM".           * 00130001
*                                                                     * 00140001
*********************************************************************** 00150000
NOTCTLG3 CSECT                                                          00160000
NOTCTLG3 RMODE ANY                                                      00170000
         SAVE  (14,12),,'GSF UTILITIES - NOTCTLG3 R201'                 00180001
         LR    R11,R15                                                  00190001
         USING NOTCTLG3,R11                                             00200001
         L     R2,0(,R1)               PARM FROM JCL                    00210000
         STORAGE OBTAIN,LENGTH=DYNL,BNDRY=PAGE ALLOCATE DYNAMIC STORAGE 00220000
         ST    R13,4(,R1)              SAVE SAVE AREA ADDRESS           00230000
         LR    R13,R1                  NEW SAVE AREA                    00240000
         USING DYN,R13                                                  00250000
         LA    R0,CATNAME              WORK AREA                        00260000
         LA    R1,WORK26               WORK AREA                        00270000
         STM   R0,R1,CTGPL1+8          ADDR OF CATALOG NAME, WORK AREA  00280000
         ST    R1,CTGPL6+12            ADDRESS OF WORK AREA             00290000
         ST    R1,CAML26+12            ADDRESS OF WORK AREA             00300000
*                                                                       00310000
*        PROCESS PARM (GET RETURN CODE VALUE IN BINARY)                 00320000
*                                                                       00330000
         LH    R15,0(,R2)              PARM LENGTH                      00340000
         BCTR  R15,0                                                    00350000
         PACK  RETCODE,2(*-*,R2)       RETURN CODE                      00360000
         EX    R15,*-6                 EXECUTE PACK INSTRUCTION         00370000
         CVB   R10,RETCODE             GET RETCODE, CHECK FOR A S0C7    00380000
*                                                                       00390000
         L     R1,540(,0)              MY TCB (PSATOLD-PSA)             00400001
         L     R4,TCBJSCB-TCB(,R1)     MY JSCB                          00410000
         USING IEZJSCB,R4                                               00420000
         L     R5,JSCBJCT              GET JCT ADDRESS                  00430000
         USING JCT,R5                                                   00440000
         L     R6,JSCSCT               CURRENT STEP'S SCT PREFIX        00450000
         USING SCT,R6                                                   00460000
**       CLC   =C'FROM ',SCTSCLPC      PROCSTEP                         00470000
**       BE    LOOPSCT                                                  00480000
         CLC   =C'FROM ',SCTSNAME      STEP=FROM?                       00490000
         BNE   RETURN                  IT'S NOT THE RIGHT STEP, I QUIT  00500000
*LOOP                                                                   00510000
LOOPSCT  CLC   SCTSDPSA,JSCSCT+1       COND MUST REFER TO MY STEP       00520000
         BNE   NEXTSTEP                IT'S NOT THE CASE, TRY NEXT STEP 00530000
         CH    R10,SCTSDPCD            COND=(54,LT,FROM)                00540000
         BH    NEXTSTEP                STEP TO BE BYPASSED              00550000
         ICM   R1,B'0111',SCTFSIOT     PREFIX OF 1ST SIOT               00560000
         BZ    NEXTSTEP                NO MORE DDS, TRY NEXT SCT        00570000
*--LOOP                                                                 00580000
LOOPSIOT BAL   R9,SWAREQ               CONVERT SVA TO 31-BIT ADDRESS    00590000
         LR    R7,R1                   PASS SIOT ADDRESS                00600000
         USING SIOT,R7                                                  00610000
         ICM   R1,B'0111',SCTPJFCB     JFCB PREFIX                      00620000
         BAL   R9,SWAREQ               CONVERT SVA TO 31-BIT ADDRESS    00630000
         LR    R8,R1                   PASS JFCB ADDRESS                00640000
         USING JFCB,R8                 DSNAME FROM JFCB                 00650000
         MVC   DSNAME,JFCBDSNM         MOVE DSN TO UNPROTECTED STORAGE  00660000
*                                                                       00670000
         TM    SCTSDISP,2              DISP=(,CATLG) ?                  00680000
         BNO   VSAM00                  JUMP, DISP IS NOT CATLG          00690000
         TM    SCTSBYT3,4              DISP=NEW                         00700000
         BO    DISPOK                  JUMP IF DISP=NEW                 00710000
         TM    SCTSBYT3,2              DISP=MOD                         00720000
         BNO   NEXTSIOT                EXIT IF NOT NEW OR MOD           00730000
DISPOK   TM    JFCBIND1,JFCGDG         CHECK FOR (+1)                   00740000
         BO    NEXTSIOT                JUMP, THIS IS A GDG              00750000
         LOCATE CAML26                                                  00760000
         LTR   R15,R15                                                  00770000
         BNZ   NEXTSIOT                DATA SET NOT CATALOGED           00780000
         CLI   MSG2DSN,C' '            CHECK DSNAME                     00790000
         BNE   NOTFIRST                NOT FIRST ERROR, JUMP            00800000
         WTO   MF=(E,BLANKLNE)         BLANK LINE                       00810000
         WTO   MF=(E,BLANKLNE)         BLANK LINE                       00820000
NOTFIRST MVC   MSG2STEP,SCTSNAME       STEPNAME                         00830000
         MVC   MSG2DDN,SCTDDNAM        DDNAME                           00840000
         MVC   MSG2DSN,JFCBDSNM        DSNAME                           00850000
         WTO   MF=(E,MSG2)             ISSUE "ALREADY CATALOGED" MSG    00860000
         B     NEXTSIOT                                                 00870000
*                                                                       00880000
*        SELECT VSAM DATA SETS                                          00890000
*                                                                       00900000
VSAM00   CLI   JFCDSRG2,JFCORGAM       AMP='AMORG' ON DD?               00910000
         BE    VSAM10                  YES, IT'S A VSAM DATA SET        00920000
         CLC   =C'PPV.',JFCBDSNM       /// FILTER                       00930000
         BNE   NEXTSIOT                NOT VSAM, JUMP                   00940000
*                                                                       00950000
VSAM10   LA    R1,VSTABLE              ADDRESS OF VSAM DSN TABLE        00960000
*--LOOP                                                                 00970000
VSAM20   ICM   R2,B'1111',0(R1)        PTR TO JFCBDSNM                  00980000
         BZ    VSAM30                  END OF TABLE, QUIT               00990000
         CLC   JFCBDSNM,0(R2)          SAME DSN?                        01000000
         BE    NEXTSIOT                YES, DSN PROCESSED ALREADY       01010000
         LA    R1,4(,R1)               BUMP UP TABLE POINTER            01020000
         B     VSAM20                  LOOP THRU VSAM TABLE             01030000
*----ENDLOOP                                                            01040000
VSAM30   LA    R0,JFCBDSNM             ADDR OF DSNAME                   01050000
         ST    R0,0(,R1)               ADD NEW ENTRY TO VSTABLE         01060000
         BAL   R9,VERIFY00             GO VERIFY THE VSAM DATA SET      01070000
*                                                                       01080000
NEXTSIOT ICM   R1,B'0111',SCTPSIOT     NEXT SIOT'S PREFIX               01090000
         BNZ   LOOPSIOT                PROCESS NEXT DD CARD IN STEP     01100000
*--ENDLOOP                                                              01110000
         DROP  R7,R8                   WERE SIOT, JFCB                  01120000
NEXTSTEP ICM   R6,B'0111',SCTANSCT     NEXT SCT PREFIX                  01130000
         BNZ   LOOPSCT                 PROCESS NEXT STEP                01140000
*ENDLOOP                                                                01150000
ENDSCT   CLI   MSG2DSN,C' '            CHECK FOR AN ERROR               01160000
         BE    RETURN                  NO ERRORS, RETURN.               01170000
         WTO   MF=(E,BLANKLNE)         BLANK LINE                       01180000
         WTO   MF=(E,BLANKLNE)         BLANK LINE                       01190000
*                                                                       01200000
*        IF THE STEP IS AUTHORIZED, SET THE "JOB FAILED" BIT ON         01210000
*        IN THE JCT.  IF THE STEP ISN'T AUTHORIZED, ISSUE AN ABEND.     01220000
*        THE ADVANTAGE OF A "JOB FAILED" IS THAT COND=EVEN STEPS        01230000
*        ARE NOT EXECUTED.                                              01240000
*                                                                       01250000
         TM    JSCBOPTS,JSCBAUTH       TEST AUTHORIZATION               01260000
         BZ    ABEND88                 JUMP IF NOT AUTHORIZED.          01270000
         MODESET KEY=ZERO              CHANGE TO KEY 0                  01280000
         OI    JCTJSTAT,INCMSTS        TURN ON "JOB FAILED" BIT         01290000
*                                                                       01300000
RETURN   LR    R1,R13                  PASS ADDR FOR FREEMAIN           01310000
         L     R13,4(,R13)                                              01320000
         STORAGE RELEASE,LENGTH=DYNL,ADDR=(1) FREE DYNAMIC STORAGE      01330000
         LR    R15,R10                 RETURN CODE FROM PARM            01340000
         RETURN (14,12),RC=(15)                                         01350000
ABEND88  ABEND 2088                    AT LEAST 1 CATALOGED DATA SET    01360000
*********************************************************************** 01370000
*                                                                     * 01380000
*        SUB-ROUTINE USED TO ACCESS THE SWA MANAGER                   * 01390000
*                                                                     * 01400000
*********************************************************************** 01410000
SWAREQ   ICM   R1,B'1000',16(0)        CLEAR FIRST BYTE                 01420000
         TM    JCTSTAT2,JCTSWAUP       CHECK SWA PLACEMENT              01430000
         BZR   R9                      SWA BELOW, BYPASS SWAREQ         01440000
         LA    R2,WORK26               WORK AREA                        01450000
         ST    R2,EPAPTR               STORE POINTER                    01460000
         USING ZB505,R2                                                 01470000
         XC    SWAEPAX,SWAEPAX         CLEAR 32 BYTES                   01480001
         STCM  R1,B'0111',SWVA         STORE 3-BYTE SVA                 01490000
         SWAREQ FCODE=RL,EPA=EPAPTR,MF=(E,SWAREQL1),UNAUTH=YES          01500000
         L     R1,SWBLKPTR             LOAD SWA CONTROL BLOCK ADDRESS   01510000
         SH    R1,=H'16'               SUBTRACT LENGTH OF PREFIX        01520000
         BR    R9                                                       01530000
         DROP  R2,R5                   WERE ZB505, JCT                  01540000
*---------------------------------------------------------------------* 01550000
*                                                                     * 01560000
*        WORK AREAS FOR NOT-CATLG 2 FUNCTION                          * 01570000
*                                                                     * 01580000
*---------------------------------------------------------------------* 01590000
BLANKLNE WTO   '****',ROUTCDE=14,MF=L  BLANK LINE FOR READABILITY       01600000
&STR     SETC  (44)' '                                                  01610000
MSG2     WTO   '**** ALREADY CATALOGED: SSSSSSSS DDDDDDDD &STR',       X01620000
               ROUTCDE=(11,14),MF=L                                     01630000
MSG2STEP EQU   MSG2+28+00,8            STEPNAME                         01640000
MSG2DDN  EQU   MSG2+28+09,8            DDNAME                           01650000
MSG2DSN  EQU   MSG2+28+18,44           DSNAME                           01660000
CAML26   CAMLST NAME,DSNAME,,WORK26-WORK26                              01670000
*********************************************************************** 01680000
*                                                                     * 01690000
*        VERIFY A VSAM DATA SET IF IT NEEDS TO                        * 01700000
*                                                                     * 01710000
*********************************************************************** 01720000
VERIFY00 MVI   CATNAME,C' '            LOCATE RETURNS THE CATALOG NAME  01730000
         MVC   WORK26(4),=Y(L'WORK26,0)  FORMAT WORK AREA HEADER        01740000
         LOCATE CTGPL1                 LISTCAT CATACB/NAMEDS/ENTIDNO    01750000
         LTR   R15,R15                                                  01760000
         BNZ   VERIFY99                NOT CATALOGED, QUIT              01770000
         L     R15,CTGFLDA1+4          TCCC (TYPE, CI NUMBER)           01780000
         LA    R15,1(,R15)             CCC (CI NUMBER)                  01790000
         L     R0,CTGFLDA2+4           AAAA (CAT ACB ADDRESS)           01800000
         STM   R15,R0,CTGPL6+4         STORE INTO CTGENT, CTGCAT        01810000
         LOCATE CTGPL6                 LISTCAT OPENIND/ENTNAME          01820000
         LTR   R15,R15                                                  01830000
         BNZ   VERIFY99                                                 01840000
         L     R1,CTGFLDA6+4           ADDRESS OF OPENIND               01850000
         CLI   0(R1),X'80'             CHECK OPENIND                    01860000
         BNE   VERIFY99                DATA SET NOT OPEN                01870000
         L     R2,CTGFLDA7+4           ADDRESS OF DATA COMPONENT NAME   01880000
         LR    R14,R2                  POINT PAST NAME                  01890000
VERIFYL1 LA    R14,1(,R14)             BUMP UP TO NEXT BYTE             01900000
         CLI   0(R14),C' '                                              01910000
         BNE   VERIFYL1                FIND FIRST BLANK AFTER NAME      01920000
         MVC   0(44,R14),CATNAME       CONCATENATE CATALOG NAME         01930000
         LR    R15,R14                 LENGTH OF COMPONENT NAME         01940000
VERIFYL2 LA    R15,1(,R15)             BUMP UP TO NEXT BYTE             01950000
         CLI   0(R15),C' '                                              01960000
         BNE   VERIFYL2                FIND FIRST BLANK AFTER NAME      01970000
         LR    R1,R15                  KEEP ADDR OF 1ST BLANK           01980000
         SR    R15,R14                 LENGTH OF CATALOG NAME           01990000
         SR    R14,R2                  LENGTH OF COMPONENT NAME         02000000
         LA    R3,4(R14,R15)           LENGTH OF RNAME                  02010000
         STC   R3,0(,R1)               LENGTH OF RNAME                  02020000
         STC   R14,1(,R1)              LENGTH OF COMPONENT NAME         02030000
         STC   R15,2(,R1)              LENGTH OF CATALOG NAME           02040000
         MVI   3(R1),C'O'              OPENED FOR OUTPUT                02050000
         GQSCAN AREA=(WORK26,L'WORK26), ADDR & LENGTH OF INFO RETURNED X02060000
               REQLIM=1,               MAX NUM OF OWNERS TO BE RETURNEDX02070000
               SCOPE=ALL,              ALL SYSTEMS IN GRS RING         X02080000
               RESNAME=(QNAME1,(R2),(R3)),                             X02090000
               MF=(E,GRSWORK)          WORK AREA                        02100000
         LTR   R15,R15                                                  02110000
         BZ    VERIFY99                DATA SET IS OPEN                 02120000
         LA    R1,=A(S99RB+VL)                                          02130000
         SVC   99                      ALLOCATE VSAM DATA SET           02140000
         LTR   R15,R15                                                  02150000
         BNZ   VERIFY99                DYNALLOC FAILED                  02160000
         MVC   ACB1DDN,S99T1+6         MOVE SYS12345 DDNAME             02170000
         OPEN  ACB1,MODE=31            OPEN ACB FOR AUTOMATIC VERIFY    02180000
         CLOSE ACB1,MODE=31            CLOSE/FREE                       02190000
VERIFY99 BR    R9                      GOBACK TO MAIN LOOP              02200000
QNAME1   DC    C'SYSVSAM '             QNAME FOR VSAM OPEN              02210000
*---------------------------------------------------------------------* 02220000
*                                                                     * 02230000
*        DYNAMIC ALLOCATION OF A VSAM DATA SET                        * 02240000
*                                                                     * 02250000
*---------------------------------------------------------------------* 02260000
S99RB    DC    A(X'14010000',0,S99TUPL,0,0)                             02270000
S99TUPL  DC    A(S99T1,S99T2,S99T4+VL)                                  02280000
S99T1    DC    XL2'55,1,8',C'$$VERIFY' DDNAME                           02290000
S99T2    DC    AL2(2,1,44),CL44' '     DSNAME                           02300000
DSNAME   EQU   S99T2+6,44                                               02310000
S99T4    DC    AL2(4,1,1),X'08'        DISP=SHR                         02320000
*---------------------------------------------------------------------* 02330000
*                                                                     * 02340000
*        CATALOG PARM LIST FOR LISTCAT (NAMEDS,CATACB)                * 02350000
*                                                                     * 02360000
*---------------------------------------------------------------------* 02370000
CTGPL1   DC    A(X'06408100',DSNAME,CATNAME-CATNAME,WORK26-WORK26)      02380000
         DC    X'2000',C' ',X'02'                                       02390000
         DC    A(0,0,CTGFL1,CTGFL2)                                     02400000
CTGFL1   DC    A(X'01000000',0,FLDNM1,0)                                02410000
CTGFLDA1 DC    2A(0)                                                    02420000
FLDNM1   DC    CL8'NAMEDS'             DATA/INDEX CI NUMBERS            02430000
CTGFL2   DC    A(X'01000000',0,FLDNM2,0)                                02440000
CTGFLDA2 DC    2A(0)                                                    02450000
FLDNM2   DC    CL8'CATACB'             ADDRESS OF CATALOG'S ACB         02460000
*---------------------------------------------------------------------* 02470000
*                                                                     * 02480000
*        CATALOG PARM LIST FOR LISTCAT (OPENIND/ENTNAME,HURBADS)      * 02490000
*                                                                     * 02500000
*---------------------------------------------------------------------* 02510000
CTGPL6   DC    A(X'00408100',*-*,*-*,WORK26-WORK26)                     02520000
         DC    X'2000',C'D',X'03'                                       02530000
         DC    A(0,0,CTGFL6,CTGFL7,CTGFL8)                              02540000
CTGFL6   DC    A(X'01000000',0,FLDNM6,0)                                02550000
CTGFLDA6 DC    2A(0)                                                    02560000
FLDNM6   DC    CL8'OPENIND'            OPEN INDICATOR                   02570000
CTGFL7   DC    A(X'01000000',0,FLDNM7,0)                                02580000
CTGFLDA7 DC    2A(0)                                                    02590000
FLDNM7   DC    CL8'ENTNAME'            NAME OF ENTRY                    02600000
CTGFL8   DC    A(X'01000000',0,FLDNM8,0)                                02610000
CTGFLDA8 DC    2A(0)                                                    02620000
FLDNM8   DC    CL8'HURBADS'            HIGH USED RBA                    02630000
*---------------------------------------------------------------------* 02640000
*                                                                     * 02650000
*        ACB USED TO VERIFY VSAM DATA SETS                            * 02660000
*                                                                     * 02670000
*---------------------------------------------------------------------* 02680000
ACB1     ACB   DDNAME=$$VERIFY,MACRF=(ADR,SEQ,OUT)                      02690000
ACB1DDN  EQU   ACB1+40,8               DDN POSITION IN ACB              02700000
*---------------------------------------------------------------------* 02710000
*                                                                     * 02720000
*        DYNAMIC STORAGE AREA                                         * 02730000
*                                                                     * 02740000
*---------------------------------------------------------------------* 02750000
DYN      DSECT                                                          02760000
SAVEAREA DS    18F                                                      02770000
RETCODE  DS    D                                                        02780000
SWAREQL1 SWAREQ MF=L                   PARM LIST FOR SWAREQ             02790000
EPAPTR   DS    F                       POINTER TO EPA (ZB505)           02800000
CATNAME  DS    CL44                    CATALOG NAME                     02810000
GRSWORK  GQSCAN MF=L                                                    02820000
WORK26   DS    XL512                   SVC26                            02830000
VSTABLE  DS    1000A(JFCBDSNM)         VSAM DSN TABLE                   02840000
DYNL     EQU   (((*-DYN+4095)/4096)*4096)                               02850000
*---------------------------------------------------------------------* 02860000
*                                                                     * 02870000
*        DSECTS FOR SWA/LSQA CONTROL BLOCKS                           * 02880000
*                                                                     * 02890000
*---------------------------------------------------------------------* 02900000
VL       EQU   X'80000000'                                              02910000
         YREGS                         SYS1.MACLIB                      02920000
         IEFZB505 LOCEPAX=YES          EPA MAPPING FOR SWAREQ           02930001
         EJECT                                                          02940000
         IEFJESCT TYPE=DSECT           JES CONTROL TABLE                02950000
         EJECT                                                          02960000
         IKJTCB LIST=NO                SYS1.MODGEN                      02970000
         EJECT                                                          02980000
         IEZJSCB ,                     SYS1.AMODGEN                     02990000
         EJECT                                                          03000000
JCT      DSECT                                                          03010000
         DS    XL16                    PREFIX                           03020000
         IEFAJCTB ,                    SYS1.AMODGEN                     03030000
         EJECT                                                          03040000
SCT      DSECT                                                          03050000
         DS    XL16                    PREFIX                           03060000
         IEFASCTB ,                    SYS1.AMODGEN                     03070000
         EJECT                                                          03080000
SIOT     DSECT                                                          03090000
         DS    XL16                    PREFIX                           03100000
         IEFASIOT ,                    SYS1.AMODGEN                     03110000
         EJECT                                                          03120000
JFCB     DSECT                                                          03130000
         DS    XL16                    PREFIX                           03140000
         IEFJFCBN ,                    SYS1.AMODGEN                     03150000
         CVT   LIST=NO,DSECT=YES       COMMUNICATION VECTOR TABLE       03160000
         END                                                            03170000
//SYSLIB   DD DSN=SYS1.AMODGEN,DISP=SHR                                 03180000
//         DD DSN=SYS1.MACLIB,DISP=SHR                                  03190000
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)                                    03200000
//SYSPRINT DD SYSOUT=*                                                  03210000
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200      03220000
//*                                                                     03230000
//LKED    EXEC PGM=HEWL,PARM='MAP,AC=1',COND=(0,NE,ASMH)                03240000
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,DELETE)                       03250000
//SYSLMOD  DD DSN=GILBERT.LOAD(CZX3PSRC),DISP=SHR                       03260001
//SYSPRINT DD SYSOUT=*                                                  03270000
//*                                                                     03280000
//DD2## DD DISP=(MOD,DELETE),DSN=GILBERT.NOTCTLG2,UNIT=3380,SPACE=(1,0) 03290001
//DD2   DD DISP=(,CATLG),DSN=GILBERT.NOTCTLG2,UNIT=3380,SPACE=(1,0)     03300001
//DD3   DD DISP=(MOD,DELETE),DSN=GILBERT.NOTCTLG3,UNIT=3380,SPACE=(1,0) 03310001
//*                                                                     03320000
//PROC    PROC                                                          03330000
//FROM    EXEC PGM=CZX3PSRC,PARM=54                                     03340000
//STEPLIB  DD DSN=GILBERT.LOAD,DISP=SHR                                 03350001
//ABNLTERM DD SYSOUT=*                                                  03360000
//SYSUDUMP DD SYSOUT=*                                                  03370000
//*                                                                     03380000
//STEP53  EXEC PGM=IEFBR14,COND=(53,LT,FROM)                            03390000
//DDCAT2 DD DISP=(,CATLG),DSN=GILBERT.NOTCTLG2,UNIT=3380,SPACE=(1,0)    03400001
//*                                                                     03410000
//STEP54  EXEC PGM=IEFBR14,COND=(54,LT,FROM)                            03420000
//DDCAT2 DD DISP=(,CATLG),DSN=GILBERT.NOTCTLG2,UNIT=3380,SPACE=(1,0)    03430001
//*                                                                     03440000
//STEP55  EXEC PGM=IEFBR14,COND=(55,LT,FROM)                            03450000
//DDCAT5 DD DISP=(,CATLG),DSN=GILBERT.NOTCTLG3,UNIT=3380,SPACE=(1,0)    03460001
//*                                                                     03470000
//STEP56  EXEC PGM=IEFBR14,COND=(56,LT,FROM)                            03480000
//DD6A DD DISP=(,CATLG),DSN=GILBERT.NOTCTLG2(+1),UNIT=3380,SPACE=(1,0)  03490001
//DD6B DD DISP=(MOD,CATLG),DSN=GILBERT.NOTCTLG2(MM),                    03500001
// UNIT=3380,SPACE=(1,0)                                                03510001
//VFY  DD DSN=PPV.VFY,DISP=SHR                                          03520000
//*                                                                     03530000
//STEP57  EXEC PGM=IEFBR14,COND=(57,LT,FROM)                            03540000
//VFY  DD DSN=GILBERT.VFY2,AMP='AMORG',DISP=SHR                         03550001
//        PEND                                                          03560000
//*                                                                     03570000
//EXECPROC EXEC PROC                                                    03580000
