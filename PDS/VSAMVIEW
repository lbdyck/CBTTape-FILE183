//GILBERTV JOB (ACCT#),VSAMVIEW,                                        00010000
// NOTIFY=&SYSUID,                                                      00020000
// CLASS=A,MSGCLASS=H,COND=(0,NE)                                       00030000
//HLASM EXEC PGM=ASMA90,PARM=(NODECK,OBJECT,NOESD,NORLD,NOXREF)         00040001
         PUNCH ' ALIAS VV'          <- "VV" IS AN ALIAS FOR "VSAMVIEW"  00050000
*********************************************************************** 00060000
*                                                                     * 00070000
* MODULE NAME = VSAMVIEW                                              * 00080000
*                                                                     * 00090000
* DESCRIPTIVE NAME = VIEW A VSAM DATA SET UNDER ISPF                  * 00100000
*                                                                     * 00110000
* Function = This command allows you to view a VSAM data set in       * 00120001
*            ISPF using the VIEW interface (VIIF).                    * 00130001
*            The SAVE command is disabled, but all other VIEW         * 00140001
*            facilities are available (create, etc).                  * 00150001
*                                                                     * 00160000
* STATUS = R105                                                       * 00170005
*                                                                     * 00180000
* Author = Gilbert Saint-Flour <carlos@gsf-soft.com>                  * 00190001
*          http://gsf-soft.com/Freeware/                              * 00200003
*                                                                     * 00210000
* NOTES = SEE BELOW                                                   * 00220000
*                                                                     * 00230000
*    DEPENDENCIES = OS/390 R10 and z/OS                               * 00240001
*                   ISPF/PDF V3                                       * 00250004
*                   STRING macro R510                                 * 00260003
*                                                                     * 00270000
*    AUTHORIZATION = NONE                                             * 00280000
*                                                                     * 00290000
*    RESTRICTIONS = NONE                                              * 00300000
*                                                                     * 00310000
* MODULE TYPE = PROCEDURE, (TSO COMMAND PROCESSOR)                    * 00320000
*                                                                     * 00330000
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 OR                      * 00340000
*                IBM HIGH LEVEL ASSEMBLER/MVS                         * 00350000
*                                                                     * 00360000
*    MODULE SIZE = 3K                                                 * 00370000
*                                                                     * 00380000
*    ATTRIBUTES = REENTERABLE, RMODE 24, AMODE 31,                    * 00390000
*                 PROBLEM STATE, KEY 8                                * 00400000
*                                                                     * 00410000
* OPERATION = SEE COMMENTS IN SOURCE CODE                             * 00420000
*                                                                     * 00430000
* SYNTAX = SEE BELOW                                                  * 00440000
*                                                                     * 00450000
*        VSAMVIEW 'DATA-SET-NAME'                                     * 00460000
*                 RECSIZE('MAX-RECORD-LENGTH')                        * 00470000
*                 SKIP('COUNT')                                       * 00480000
*                 COUNT('COUNT')                                      * 00490000
*                                                                     * 00500000
*        REQUIRED: DATA-SET-NAME                                      * 00510000
*                                                                     * 00520000
* CHANGE ACTIVITY                                                     * 00530000
*                                                                     * 00540000
*  100   INITIAL RELEASE                                          1995* 00550000
*  101   Replace EDIF with VIIF (OS/390 R10 and z/OS)             2002* 00560001
*  102   ISRCONFG no longer exists in ISPF V5                     2003* 00570002
*  103   VRDS Support                                             2005* 00580003
*  104   ISPF/PDF V3 Support                                      2009* 00590004
*  105   Display ISRZ001 Message at start-up                          * 00600005
*  106   Data Set <dsname> is of unsupported type (LDS)           2010* 00610006
*                                                                     * 00620000
&REL     SETC  'R106'                                                 * 00630006
*********************************************************************** 00640000
VSAMVIEW CSECT                                                          00650000
VSAMVIEW AMODE 31                                                       00660000
&D       SETC  '&SYSDATE'(7,2)'-'.'&SYSDATE'(1,2)'-'.'&SYSDATE'(4,2)    00670004
         SAVE  (14,12),,'GSF Utilities - VSAMVIEW &REL - 20&D &SYSTIME' 00680004
         LR    R11,R15                                                  00690000
         USING VSAMVIEW,R11                                             00700000
         LR    R9,R1                   SAVE CPPL ADDRESS                00710000
         USING CPPL,R9                 SET UP ADDRESSABILITY TO CPPL    00720000
         ICM   R2,B'1111',CPPL         INVOKED AS A PGM?                00730000
         BM    ALLOCATE                YES, JUMP                        00740000
         LA    R3,DYNAML               LENGTH OF DYNAMIC STORAGE AREA   00750000
         GETMAIN R,LV=(R3)             ALLOCATE DYNAMIC STORAGE         00760000
         LR    R2,R1                   CLEAR DYNAMIC STORAGE            00770000
         SLR   R15,R15                 CLEAR DYNAMIC STORAGE            00780000
         MVCL  R2,R14                  CLEAR DYNAMIC STORAGE            00790000
         ST    R13,4(,R1)                                               00800000
         ST    R1,8(,R13)                                               00810000
         LM    R13,R1,8(R13)           SET R13, RELOAD R14-R1           00820000
         USING DYNAM,R13                                                00830000
         STM   R11,R12,BASEREGS        FOR READ ROUTINES                00840000
*********************************************************************** 00850000
*                                                                     * 00860000
*        BUILD PARSE PARM LIST, CALL IKJPARS                          * 00870000
*                                                                     * 00880000
*********************************************************************** 00890000
CALLPARS LA    R1,TENWORDS             POINT TO PPL                     00900000
         USING PPL,R1                  SET UP ADDRESSABILITY TO PPL     00910000
         L     R0,CPPLUPT              USER PROFILE TABLE               00920000
         ST    R0,PPLUPT               STORE UPT ADDRESS IN PPL         00930000
         L     R0,CPPLECT              ENVIRONMENT CONTROL TABLE        00940000
         ST    R0,PPLECT               STORE ECT IN PPL                 00950000
         LA    R0,ECB1                 EVENT CONTROL BLOCK              00960000
         ST    R0,PPLECB               STORE ECB IN PPL                 00970000
         MVC   PPLPCL,=A(PCLCSECT)     STORE PCL ADDR INTO PPL          00980000
         LA    R0,DYNANSWR             ANSWER AREA                      00990000
         ST    R0,PPLANS               STORE ANSWER ADDRESS IN PPL      01000000
         L     R0,CPPLCBUF             COMMAND BUFFER                   01010000
         ST    R0,PPLCBUF              STORE BUFFER ADDRESS IN PPL      01020000
         LA    R14,=C'IKJPARS '        NAME OF PARSE ROUTINE            01030000
         L     R15,16                  CVTPTR                           01040000
         L     R15,8(,R15)             CVTLINK                          01050000
         STM   R14,R15,DWD             BUILD LINK PARMLIST              01060000
         LINK  SF=(E,DWD)              CALL THE PARSE ROUTINE           01070000
         LTR   R7,R15                  CHECK FOR ZERO PARSE RETURN      01080000
         BNZ   QUIT16                  GO AWAY UPSET                    01090000
         DROP  R1,R9                   PPL, CPPL                        01100000
*********************************************************************** 01110000
*                                                                     * 01120000
*        PROCESS PARSED PARAMETERS                                    * 01130000
*                                                                     * 01140000
*********************************************************************** 01150000
PARSE100 L     R2,DYNANSWR             LOAD PDL ADDRESS                 01160000
         USING IKJPARMD,R2             SET UP ADDRESSABILITY TO PDL     01170000
         LA    R14,DSNAME              44-BYTE AREA                     01180000
         LA    R15,L'DSNAME            GET LENGTH                       01190000
         L     R0,DSNPCE               GET ADDRESS                      01200000
         LH    R1,DSNPCE+4             ACTUAL LENGTH OF DSN             01210000
         ICM   R1,B'1000',=C' '        PADDING                          01220000
         MVCL  R14,R0                  MOVE DATA SET NAME               01230000
*TPUT DSNAME,L'DSNAME                                                   01240000
PARSE180 LA    R1,RECSZIDL             LOAD POINTER TO RECSZ FIELD      01250000
         BAL   R14,PACKCVB             CONVERT PARAMETER                01260000
         ST    R0,RECSIZE              STORE RECORD SIZE                01270000
         LA    R1,SKIPIDL              LOAD POINTER TO SKIP FIELD       01280000
         BAL   R14,PACKCVB             CONVERT PARAMETER                01290000
         ST    R0,RECSKIP              STORE SKIP COUNT                 01300000
         LA    R1,COUNTIDL             LOAD POINTER TO COUNT FIELD      01310000
         BAL   R14,PACKCVB             CONVERT PARAMETER                01320000
         AL    R0,RECSKIP              ADD SKIP COUNT                   01330000
         ST    R0,RECCOUNT             STORE UPPER LIMIT                01340000
*                                                                       01350000
*        FREE-UP STORAGE ACQUIRED BY PARSE                              01360000
*                                                                       01370000
         IKJRLSA DYNANSWR              FREE PDL                         01380000
*                                                                       01390000
*        BUMP MY USE COUNT TO PREVENT S0C4 ON $SELECT                   01400000
*                                                                       01410000
         L     R1,540(,0)              PSATOLD (MY TCB)                 01420003
         L     R1,0(,R1)               TCBRBP (MY PRB)                  01430000
         ICM   R1,B'0111',X'00D'(R1)   RBCDE1 (MY CDE)                  01440000
         MVC   OWNNAME,CDNAME-CDENTRY(R1) MOVE OWN NAME                 01450000
         LOAD  EPLOC=OWNNAME           BUMP CDUSE                       01460000
*                                                                       01470000
*        RE-INVOKE MYSELF AS A PGM AND PASS THE ADDR OF THE DYNAMIC     01480000
*        STORAGE AREA IN THE PARM.                                      01490000
*                                                                       01500000
         STRING 'PGM(',(OWNNAME,,T),') PARM(',((R13),,R8Z),')',        X01510000
               INTO=MESSAGE                                             01520000
         ST    R15,DWD                 LENGTH                           01530000
         LA    R14,$SELECT             SERVICE                          01540000
         LA    R15,DWD                 LENGTH                           01550000
         LA    R0,MESSAGE              PARAMETERS                       01560000
         STM   R14,R1,TENWORDS         PARM LIST                        01570000
         OI    TENWORDS+8,X'80'        PARM LIST                        01580000
         LA    R1,TENWORDS             PARM LIST                        01590000
         L     R13,4(,R13)             CALLER'S SAVE AREA               01600000
         XCTL  (2,12),EPLOC=$ISPLINK                                    01610000
*---------------------------------------------------------------------* 01620000
*        PACKCVB SUB-ROUTINE                                          * 01630000
*---------------------------------------------------------------------* 01640000
PACKCVB  LH    R15,4(,R1)              LOAD LENGTH                      01650000
         LTR   R0,R15                  THIS PARM SPECIFIED?             01660000
         BZR   R14                     NO, GOBACK WITH R0=0             01670000
         L     R1,0(,R1)               LOAD ADDRESS                     01680000
         BCTR  R15,0                   DECREMENT R15 FOR EXECUTE        01690000
         EX    R15,PACKCVBX            PACK VALUE                       01700000
         CVB   R0,DWD                  CONVERT ZONED TO BINARY          01710000
         BR    R14                                                      01720000
PACKCVBX PACK  DWD,0(,R1)              *EXECUTED*                       01730000
*---------------------------------------------------------------------* 01740000
         MACRO                                                    MACRO 01750000
&NAME    ISPLINK &OPRNDS,&ERRET=                                  MACRO 01760000
         GBLB  &IHBSWA                                            MACRO 01770000
&IHBSWA  SETB  1                       VL=1                       MACRO 01780000
&NAME    LA    R1,TENWORDS             PARM LIST                  MACRO 01790000
         IHBOPLST ,&OPRNDS,MF=(E,(1))                             MACRO 01800000
         L     R15,ISPLINK@            ISPLINK BOOTSTRAP                01810000
         BALR  R14,R15                 INVOKE ISPLINK                   01820000
         AIF   (T'&ERRET EQ 'O').MEND                             MACRO 01830000
         LTR   R15,R15                 ANY ERROR?                       01840000
         BNZ   &ERRET                  YES, JUMP                        01850000
.MEND    MEND                                                     MACRO 01860000
*********************************************************************** 01870000
*                                                                     * 01880000
*        ALLOCATE THE DATA SET                                        * 01890000
*                                                                     * 01900000
*********************************************************************** 01910000
ALLOCATE PACK  16(8,R13),2(8,R2)       PACK THE PARM                    01920000
         CVB   R1,16(,R13)             GET IT IN BINARY                 01930000
         ST    R13,4(,R1)                                               01940000
         ST    R1,8(,R13)                                               01950000
         LM    R13,R1,8(R13)           SET R13, RELOAD R14-R1           01960000
         USING DYNAM,R13                                                01970000
*---------------------------------------------------------------------* 02010000
*        ISPEXEC CONTROL ERRORS RETURN                                * 02020000
*---------------------------------------------------------------------* 02030000
         LOAD  EPLOC=$ISPLINK                                           02040000
         ST    R0,ISPLINK@             SAVE ISPLINK ADDRESS             02050000
         ISPLINK ($CONTROL,$ERRORS,$RETURN), CONTROL ERRORS RETURN     X02060005
               ERRET=QUIT16            ISPF NOT ACTIVE                  02070005
*---------------------------------------------------------------------* 02080000
*                                                                     * 02090000
*        ALLOCATE THE DATA SET                                        * 02100000
*                                                                     * 02110000
*---------------------------------------------------------------------* 02120000
         MVC   S99RB,=X'14,01,2000'    SVC 99 REQUEST BLOCK             02130000
         LA    R1,S99TUPTR             TEXT UNIT POINTERS               02140000
         ST    R1,S99RB+8              TEXT UNIT POINTERS               02150000
*                                                                       02160000
         LA    R14,S99T1                   RETURN DDNAME                02170000
         MVC   S99T1(6),=X'0055,0001,0008' RETURN DDNAME                02180000
         LA    R15,S99T2                   DSNAME                       02190000
         MVC   S99T2(6),=X'0002,0001,002C' DSNAME                       02200000
         LA    R0,=X'0004,0001,0001,08'    DISP=SHR                     02210000
         LA    R1,=X'001C,0000'            FREE=CLOSE                   02220000
         STM   R14,R1,S99TUPTR             TEXT-UNIT POINTERS           02230000
         OI    S99TUPTR+12,X'80'           END OF LIST                  02240000
*                                                                       02250000
         LA    R1,S99RB                BUILD SVC99 PARM LIST            02260000
         ST    R1,S99RBPTR             BUILD SVC99 PARM LIST            02270000
         OI    S99RBPTR,X'80'          BUILD SVC99 PARM LIST            02280000
         LA    R1,S99RBPTR                                              02290000
         DYNALLOC ,                    ALLOCATE THE DATA SET            02300000
         LTR   R15,R15                                                  02310000
 NOP 0   BNZ   ALLOC900                SVC99 FAILED, JUMP               02320000
*---------------------------------------------------------------------* 02330000
*                                                                     * 02340000
*        INITIALIZE VSAM CONTROL BLOCKS (ACB, RPL)                    * 02350000
*                                                                     * 02360000
*---------------------------------------------------------------------* 02370000
         MVC   IFGACB(ACB1_L),ACB1_M   MOVE ACB,RPL                     02380000
         MVC   ACBDDNM,DDNAME          MOVE DDNAME                      02390000
         LA    R2,IFGACB               POINT TO ACB                     02400000
         ST    R2,OPENLIST             BUILD OPEN LIST                  02410000
         MVI   OPENLIST,X'80'          BUILD OPEN LIST                  02420000
         OPEN  MF=(E,OPENLIST)         OPEN VSAM DATA SET               02430000
         CH    R15,=H'4'               OPEN OK?                         02440000
         BH    OPENR160                NO, QUIT                         02450000
*                                                                       02460000
         SHOWCB ACB=(R2),AREA=(S,MAXRECNO),LENGTH=12,                  X02470000
               FIELDS=(NLOGR,LRECL),MF=(G,MESSAGE)                      02480000
         ICM   R0,B'1111',MAXLRECL     LRECL=0 (LDS)                    02490000
         BNZ   OPENVS3                 NO, JUMP                         02500006
         STRING '(LDS)',INTO=BAD_TYPE  bad type                         02510006
         B     OPENR170                Issue message                    02520006
*                                                                       02530000
OPENVS3  EQU   *                                                        02540006
         ICM   R0,B'1111',MAXRECNO     EMPTY/OPEN ?                     02550000
         BNZ   OPENVS4                 NO, JUMP                         02560000
         MVI   MAXRECNO,X'7F'          YES, SET MAX NUMBER              02570000
         ICM   R0,B'1111',RECCOUNT     COUNT SPECIFIED?                 02580000
         BZ    OPENVS4                 NO, JUMP                         02590000
         ST    R0,MAXRECNO             YES, USE COUNT                   02600000
OPENVS4  EQU   *                                                        02610000
*                                                                       02620000
*        SET UP RPL FOR ESDS/KSDS                                       02630000
*                                                                       02640000
         MVC   IFGRPL(RPL1_L),RPL1_M   MOVE ACB,RPL                     02650000
*TPUT =C'ST R2,RPLDACB',13                                              02660000
         ST    R2,RPLDACB              STORE ACB ADDRESS INTO RPL       02670000
         LA    R0,RECAD                THE RIGHT WORD                   02680000
         ST    R0,RPLAREA              STORE AREA ADDRESS INTO RPL      02690000
         LA    R0,L'RECAD              ADDRESS                          02700000
         ST    R0,RPLBUFL              STORE AREA LENGTH INTO RPL       02710000
*                                                                       02720000
         TESTCB ACB=(R2),ATRB=KSDS,MF=(G,MESSAGE) IS THIS A KSDS?       02730000
         BE    OPENKSDS                YES, JUMP                        02740000
         TESTCB ACB=(R2),ATRB=RRDS,MF=(G,MESSAGE) IS THIS AN RRDS?      02750000
         BE    OPENRRDS                YES, JUMP                        02760000
         TESTCB ACB=(R2),ATRB=VRRDS,MF=(G,MESSAGE) IS THIS A VRDS?      02770003
         BE    OPENRRDS                YES, JUMP                        02780003
         TESTCB ACB=(R2),ATRB=ESDS,MF=(G,MESSAGE) IS THIS AN ESDS?      02790000
         BE    OPENESDS                YES, JUMP                        02800006
         STRING 1X,INTO=BAD_TYPE       unknown bad type                 02810006
         B     OPENR170                UNSUPPORTED TYPE                 02820006
*                                                                       02830000
OPENESDS MVI   VS_TYPE,C'E'            CLUSTER IS AN ESDS               02840000
         B     OPENVS6                                                  02850000
*                                                                       02860000
OPENKSDS MVI   VS_TYPE,C'K'            CLUSTER IS A KSDS                02870000
         B     OPENVS6                                                  02880000
*                                                                       02890000
OPENRRDS MVI   VS_TYPE,C'R'            CLUSTER IS AN RRDS               02900000
         LA    R0,CURRECNO             RECORD NUMBER                    02910000
         ST    R0,RPLARG               RECORD NUMBER                    02920000
         OI    RPLOPT1,RPLDIR          OPTCD=(DIR,KEY)                  02930000
*                                                                       02940000
OPENVS6  EQU   *                                                        02950000
         LOAD  EP=ISRCONFG,ERRET=OPENVS7 PDF CONFIG TABLE               02960002
         LR    R1,R0                   ENTRY ADDRESS                    02970000
         L     R2,X'190'(,R1)          UNDOSIZE (IN K)                  02980000
         SLL   R2,10                   UNDOSIZE (IN BYTES)              02990000
         ST    R2,UNDOSIZE             ADD SIZE OF UNDO BUFFER          03000000
*                                                                       03010000
OPENVS7  EQU   *                                                        03020002
         ICM   R0,B'1111',RECSIZE      RECSIZE PARM SPECIFIED?          03030000
         BNZ   *+10                    NO, EXIT                         03040000
         MVC   RECSIZE,MAXLRECL        USE CALLER'S RECORD SIZE         03050000
*                                                                       03060000
         STRING VS_TYPE,'SDS',                                         X03070005
               ' MAXRECNO=',(MAXRECNO,F,L),                            X03080005
               ' Records_processed=',(MAXRECNO,F,L),                   X03090005
               ' RECSIZE=',(RECSIZE,F,L),                              X03100005
               INTO=MESSAGE                                             03110005
         LR    R0,R15                  save length of long message      03120005
         STRING 'VSAMVIEW &REL',INTO=SHORTMSG                           03130005
         STM   R15,R0,DWD              lengths of short & long msgs     03140005
         ISPLINK (=C'VREPLACE',=C'ZEDSMSG ',DWD,SHORTMSG)               03150005
         ISPLINK (=C'VREPLACE',=C'ZEDLMSG ',DWD+4,MESSAGE)              03160005
         ISPLINK (=C'SETMSG ',=C'ISRZ000 ')                             03170005
*                                                                       03180005
         B     VIIF                                                     03190001
*                                                                       03200000
*        VSAM OPEN ERROR                                                03210000
*                                                                       03220000
OPENR160 CLI   ACBERFLG,160            EMPTY DATA SET?                  03230000
         BNE   OPENR161                NO, QUIT                         03240003
         MVC   ZERRMSG,=C'ISRB603 '    "NO DATA TO BROWSE"              03250000
         LA    R7,4                    RC=4                             03260000
         B     SETMSG8                 ISSUE MESSAGE                    03270000
*                                                                       03280000
OPENR161 EQU   *                                                        03290003
         ST    R15,DWD+4               OPEN RC                          03300003
         STRING 'OPEN Error',INTO=MESSAGE                               03310003
         ST    R15,DWD                 LENGTH OF SHORT MESSAGE          03320003
         ISPLINK (=C'VREPLACE',=C'ZEDSMSG ',DWD,MESSAGE)                03330003
         STRING 'OPEN failed for ',(DSNAME,,T),                        X03340003
               ', R15=',(DWD+4,F,L),                                   X03350003
               ', ACBERFLG=',(ACBERFLG,FL1,R3Z),'.',                   X03360003
               INTO=MESSAGE                                             03370003
         B     OPENR190                                                 03380003
*                                                                       03390000
*        Unsupported Data Set Type                                      03400003
*                                                                       03410000
OPENR170 EQU   *                                                        03420003
         STRING 'Unsupported Data Set',INTO=MESSAGE                     03430003
         ST    R15,DWD                 LENGTH OF SHORT MESSAGE          03440003
         ISPLINK (=C'VREPLACE',=C'ZEDSMSG ',DWD,MESSAGE)                03450003
         STRING 'Data Set ',(DSNAME,,T),' is of unsupported type ',    X03460006
               BAD_TYPE,INTO=MESSAGE                                    03470006
*                                                                       03480003
OPENR190 EQU   *                                                        03490003
         ST    R15,DWD                 LENGTH OF LONG MESSAGE           03500003
         ISPLINK (=C'VREPLACE',=C'ZEDLMSG ',DWD,MESSAGE)                03510003
         ISPLINK (=C'SETMSG ',=C'ISRZ001 ')                             03520003
         B     QUIT16                                                   03530003
*********************************************************************** 03540003
*                                                                       03550000
*        INVOKE ISPF/PDF VIEW SERVICE (VIIF)                            03560001
*                                                                       03570000
*********************************************************************** 03580000
VIIF     LA    R0,SAVERRTN             DDATA FOR VIIF                   03590001
         ST    R0,SAVERRTN             DDATA FOR VIIF                   03600001
         LA    R0,READVS00             read routine                     03610005
         ST    R0,READRTNE             read routine                     03620005
*                                                                       03630000
         LA    R0,L'ZENVIR             max length of ZENVIR             03640004
         ST    R0,DWD                  max length of ZENVIR             03650004
         ISPLINK (=C'VCOPY ',=C'(ZENVIR)',DWD,ZENVIR,=C'MOVE ')         03660004
*                                                                       03670000
         CLI   ZENVIR+5,C'4'           ISPF V4 or above ?               03680004
         BL    EDIF                    no, use EDIF                     03690004
*                                                                       03700000
         ISPLINK (=C'VIIF',            SERVICE - ISPF V4/V5            X03710000
               DSNAME,                 DATA SET NAME                   X03720000
               =C'VSAMVIEW',           PROFILE NAME                    X03730000
               =C'V ',                 RECFM                           X03740000
               RECSIZE,                RECORD LENGTH                   X03750000
               READRTNE,               Addr of READ Routine            X03760005
               0,                      COMMAND EXIT                    X03770000
               SAVERRTN)               DIALOG DATA ADDR                 03780000
         LR    R7,R15                  SAVE RETURN CODE FROM VIIF       03790001
         B     SETMSG                                                   03800004
*                                                                       03810000
EDIF     ISPLINK (=C'EDIF',            SERVICE - ISPF V3               X03820004
               DSNAME,                 DATA SET NAME                   X03830004
               =C'VSAMVIEW',           PROFILE NAME                    X03840004
               =C'V ',                 RECFM                           X03850004
               RECSIZE,                RECORD LENGTH                   X03860004
               READRTNE,               Addr of READ Routine            X03870005
               =A(WRITERTN),           WRITE ROUTINE                   X03880004
               0,                      COMMAND EXIT                    X03890004
               SAVERRTN)               DIALOG DATA ADDR                 03900004
         LR    R7,R15                  SAVE RETURN CODE FROM EDIF       03910004
         B     SETMSG                                                   03920004
*---------------------------------------------------------------------* 03930004
*        DUMMY WRITE ROUTINE                                          * 03940004
*---------------------------------------------------------------------* 03950004
WRITERTN SAVE  (14,12),,WRITERTN                                        03960004
         RETURN (14,12),RC=16                                           03970004
*********************************************************************** 03980000
*                                                                       03990000
*        PROGRAM EXIT                                                   04000000
*                                                                       04010000
*           1. ISSUE ERROR MESSAGE                                      04020000
*           2. CLEAN UP                                                 04030000
*           3. GOBACK TO CALLER                                         04040000
*                                                                       04050000
*********************************************************************** 04060000
SETMSG   LTR   R7,R7                   CHECK RC FROM VIIF               04070001
         BZ    QUIT50                  OK, EXIT                         04080000
         LA    R0,L'ZERRMSG                                             04090000
         ST    R0,DWD                                                   04100000
         ISPLINK (=C'VCOPY ',=C'ZERRMSG ',DWD,ZERRMSG,=C'MOVE ')        04110000
         LTR   R15,R15                 CHECK RC                         04120000
         BNZ   QUIT50                  BAD, EXIT                        04130000
SETMSG8  ISPLINK (=C'SETMSG ',ZERRMSG)                                  04140000
         B     QUIT50                                                   04150000
*                                                                       04160000
QUIT16   LA    R7,16                   RC=16                            04170000
*---------------------------------------------------------------------* 04180000
*                                                                       04190000
*        FREE WORK AREA AND GOBACK TO ISPF                              04200000
*                                                                       04210000
*---------------------------------------------------------------------* 04220000
QUIT50   TM    OPENLIST,X'80'          OPEN LIST OK?                    04230000
         BZ    QUIT53                  NO, JUMP                         04240000
         CLOSE MF=(E,OPENLIST)         CLOSE ACB/DCB                    04250000
*                                                                       04260000
QUIT53   TM    S99RBPTR,X'80'          SVC 99 REQ BLK OK?               04270000
         BNO   QUIT90                  NO, JUMP                         04280000
         MVI   S99RB+1,2               VERB=FREE                        04290000
         OI    S99TUPTR,X'80'          ONLY 1 T.U.                      04300000
         MVI   S99T1+1,1               X'55' -> X'01'                   04310000
         LA    R1,S99RBPTR                                              04320000
         DYNALLOC ,                    FREE THE DATA SET                04330000
*                                                                       04340000
QUIT90   LR    R15,R7                  RETURN CODE                      04350000
         L     R13,4(,R13)                                              04360000
         RETURN (14,12),RC=(15)                                         04370000
*********************************************************************** 04380000
*                                                                       04390000
*        VSAM READ ROUTINE                                              04400000
*                                                                       04410000
*********************************************************************** 04420000
READVS00 SAVE  (14,12),,'VSAMVIEW READ ROUTINE'                         04430005
         LM    R4,R7,0(R1)             INPUT PARMS                      04440000
         L     R7,0(,R7)               A(SAVERRTN)                      04450000
         ST    R13,4(,R7)              CHAIN SAVE AREA                  04460000
         ST    R7,8(,R13)              CHAIN SAVE AREA                  04470000
         LR    R13,R7                  NEW SAVE AREA                    04480000
         USING SAVERRTN,R13                                             04490000
         LM    R11,R12,BASEREGS        BASE REGISTERS                   04500000
*LOOP                                                                   04510000
READVS10 EQU   *                                                        04520000
         LA    R3,1                    RECORD NUMBER                    04530000
         AL    R3,CURRECNO             RECORD NUMBER                    04540000
         ST    R3,CURRECNO             RECORD NUMBER                    04550000
         C     R3,MAXRECNO             BEYOND END OF FILE?              04560000
         BH    READVS80                YES, EXIT                        04570000
*                                                                       04580000
         ICM   R0,B'1111',RECCOUNT     COUNT SPECIFIED?                 04590000
         BZ    READVS12                NO, JUMP                         04600000
         CLR   R0,R3                   USER LIMIT REACHED?              04610000
         BL    READVS80                YES, QUIT                        04620000
READVS12 EQU   *                                                        04630000
*                                                                       04640000
*        Check if we have enough memory available                       04650000
*                                                                       04660000
         SLR   R0,R0                                                    04670000
         LR    R1,R3                   RECORD NUMBER                    04680000
         D     R0,=F'1000'             DIVIDE BY SIZE OF A SEGMENT      04690000
         LTR   R0,R0                   START OF A NEW SEGMENT?          04700000
         BNZ   READVS20                NO, JUMP                         04710000
         LA    R1,32                   LENGTH OF VIIF HEADER            04720001
         AL    R1,RECSIZE              ADD RECORD LENGTH                04730000
         M     R0,=F'1000'             CALCULATE SIZE OF A SEGMENT      04740000
         AL    R1,=F'100000'           ADD ANOTHER 100K TO BE SAFE      04750000
         AL    R1,UNDOSIZE             ADD SIZE OF UNDO BUFFER          04760000
         GETMAIN RC,LV=(R1),LOC=ANY    ALLOC ROOM FOR 1000 RECORDS      04770000
         LTR   R15,R15                 ENOUGH STORAGE LEFT?             04780000
         BZ    READVS17                YES, JUMP                        04790000
         LR    R2,R0                   CUSHION SIZE IN BYTES            04800000
         SRL   R2,10                   CUSHION SIZE IN K                04810000
*                                                                       04820000
         STRING 'INSUFFICIENT STORAGE',INTO=MESSAGE                     04830000
         ST    R15,DWD                 LENGTH OF SHORT MESSAGE          04840000
         ISPLINK (=C'VREPLACE',=C'ZEDSMSG ',DWD,MESSAGE)                04850000
         STRING 'TOTAL RECORDS: ',(MAXRECNO,F,L),                      X04860000
               ' RECORDS PROCESSED: ',((R3),,L),                       X04870000
               ' CUSHION: ',((R2),,L),'K',                             X04880000
               INTO=MESSAGE                                             04890000
         ST    R15,DWD                 LENGTH OF LONG MESSAGE           04900000
         ISPLINK (=C'VREPLACE',=C'ZEDLMSG ',DWD,MESSAGE)                04910000
         ISPLINK (=C'SETMSG ',=C'ISRZ001 ')                             04920000
*                                                                       04930000
         ST    R3,MAXRECNO             NO, TRUNCATE DATA SET            04940000
         L     R0,RECSIZE              RECORD LENGTH                    04950000
         LA    R2,MESSAGE              POINT TO MESSAGE AREA            04960000
         STRING '++++++ DATA TRUNCATED ++++++',INTO=((R2),(R0))         04970000
         B     READVS77                PASS MESSAGE TO VIIF             04980001
*                                                                       04990000
READVS17 FREEMAIN RC,LV=(0),A=(1)      FREE UP THE CUSHION              05000000
*                                                                       05010000
READVS20 GET   RPL=IFGRPL              GET NEXT RECORD                  05020000
         LTR   R15,R15                 OK?                              05030000
         BZ    READVS70                YES, JUMP                        05040000
*                                                                       05050000
*        ACTUAL END OF DATA (SHOULD ONLY OCCUR WHEN SHOWCB              05060000
*        RETURNED MAXRECNO=0)                                           05070000
*                                                                       05080000
         CLI   RPLRTNCD,X'08'          IS THIS A LOGICAL ERROR?         05090000
         BNE   READVS90                NO, QUIT                         05100000
         CLI   RPLFDB3,X'04'           END OF DATA?                     05110000
         BE    READVS80                YES, EXIT                        05120000
*                                                                       05130000
*        THE FIRST TIME A SPANNED RECORD IS READ (FDBK=X'84'),          05140000
*        SWITCH IFGRPL FROM OPTCD=LOC TO OPTCD=MVE.                     05150000
*        FROM THAT POINT ON, ALL GETS WILL BE MOVE MODE.                05160000
*        NOTE THAT A CLUSTER DEFINED WITH THE SPANNED ATTRIBUTE         05170000
*        DOES NOT NECESSARILY CONTAIN SPANNED RECORDS (IE RECORDS       05180000
*        MADE UP OF MORE THAN ONE SEGMENT).                             05190000
*                                                                       05200000
READVS34 CLI   RPLFDB3,X'48'           OPTCD=KEY WITH DATA COMPONENT?   05210000
         BE    READVS35                YES, JUMP                        05220000
*                                                                       05230000
         CLI   RPLFDB3,X'84'           OPTCD=LOC WITH SPANNED RECORDS?  05240000
         BNE   READVS90                NO, ERROR                        05250000
*                                                                       05260000
         NI    RPLOPT1,255-RPLLOC      OPTCD=MVE                        05270000
         L     R0,MAXLRECL             MAX RECORD SIZE                  05280000
         GETMAIN RU,LV=(0),LOC=ANY     ALLOC BUFFER FOR SPANNED RECORDS 05290000
         ST    R0,RPLBUFL              AREALEN=MAXLRECL                 05300000
         ST    R1,RPLAREA              STORE AREA ADDRESS INTO RPL      05310000
         B     READVS40                                                 05320000
*                                                                       05330000
READVS35 MVI   VS_TYPE,C'E'            CLUSTER IS AN ESDS               05340000
         MVI   RPLOPT2,RPLADR          OPTCD=ADR                        05350000
*                                                                       05360000
*        RE-READ A RECORD AFTER X'48' OR X'84'                          05370000
*                                                                       05380000
READVS40 EQU   *                                                        05390000
         GET   RPL=IFGRPL              RE-READ RECORD AFTER 48 OR 84    05400000
         LTR   R15,R15                 OK?                              05410000
         BNZ   READVS90                NO, QUIT                         05420000
*                                                                       05430000
*        RETURN RECORD JUST READ TO VIIF                                05440001
*                                                                       05450000
READVS70 CL    R3,RECSKIP              SHOULD I SKIP THIS RECORD?       05460000
*STRING ((R3)),(RECSKIP,F),INTO=MESSAGE                                 05470000
*TPUT MESSAGE,44                                                        05480000
*CL R3,RECSKIP                                                          05490000
         BNH   READVS10                YES, READ ANOTHER                05500000
*ENDLOOP                                                                05510000
         L     R0,RPLRLEN              PICK UP RECORD LENGTH            05520000
         L     R2,RPLAREA              NO, GET RECORD ADDR (OPTCD=MVE)  05530000
         TM    RPLOPTCD,RPLLOC         OPTCD=MVE?                       05540000
         BZ    READVS77                YES, JUMP                        05550000
         L     R2,0(,R2)               GET RECORD ADDR (OPTCD=LOC)      05560000
*                                                                       05570000
READVS77 ST    R2,0(,R4)               PASS RECORD ADDRESS TO VIIF      05580001
         ST    R0,0(,R5)               PASS RECORD LENGTH TO VIIF       05590001
         L     R13,4(,R13)                                              05600000
         RETURN (14,12),RC=00                                           05610000
*                                                                       05620000
*        RECORD NUMBER TOO HIGH, RETURN NUMBER OF HIGHEST RCD TO VIIF   05630001
*                                                                       05640000
READVS80 MVC   0(4,R6),MAXRECNO        RETURN MAX RECORD NUMBER         05650000
         TM    RPLOPT1,RPLLOC          OPTCD=LOC                        05660000
         BO    READVS81                YES, JUMP                        05670000
         L     R0,RPLBUFL              R0=AREALEN                       05680000
         FREEMAIN RU,LV=(0),A=RPLAREA  FREE MOVE MODE BUFFER            05690000
READVS81 CLOSE MF=(E,OPENLIST)         CLOSE THE ACB                    05700000
         L     R13,4(,R13)                                              05710000
         RETURN (14,12),RC=8                                            05720000
*                                                                       05730000
*        ERROR IN GET MACRO, SHOW FEEDBACK CODE                         05740000
*                                                                       05750000
READVS90 STRING '** ERROR ** RPLFDBWD=',(RPLFDBWD,,X),                 X05760000
               ' REQ=',(RPLREQ,,X),' OPTCD=',(RPLOPTCD,2,X),           X05770000
               ' RRN=',((R3),,L),' MAXRECNO=',(MAXRECNO,F,L),          X05780000
               INTO=MESSAGE                                             05790000
         ST    R3,0(,R6)               END OF FILE                      05800000
         ST    R3,MAXRECNO             END OF FILE                      05810000
         LA    R15,008                 RC=8 (EOF)                       05820000
.@TEST2 SR 15,15                                                        05830000
*                                                                       05840000
*        RETURN ERROR MESSAGE TO VIIF                                   05850001
*                                                                       05860000
READVS95 LA    R0,MESSAGE              MESSAGE                          05870000
         ST    R0,0(,R4)               PASS ADDRESS                     05880000
         LA    R0,L'MESSAGE            LENGTH                           05890000
         ST    R0,0(,R5)               PASS LENGTH                      05900000
         L     R13,4(,R13)                                              05910000
         RETURN (14,12),RC=(15)                                         05920000
*---------------------------------------------------------------------* 05930000
*        CONSTANTS                                                      05940000
*---------------------------------------------------------------------* 05950000
$ISPLINK DC    C'ISPLINK '             ISPF COMMAND INTERFACE           05960000
$SELECT  DC    C'SELECT'               SERVICE                          05970000
$CONTROL DC    C'CONTROL'              FUNCTION                         05980000
$ERRORS  DC    C'ERRORS'               OPTION                           05990000
$RETURN  DC    C'RETURN'               OPTION                           06000000
         PRINT NOGEN                                                    06010000
ACB1_M   ACB   MACRF=SEQ,RMODE31=ALL,BUFSP=200000                       06020000
ACB1_L   EQU   *-ACB1_M                                                 06030000
RPL1_M   RPL   ACB=*-*,OPTCD=(SEQ,LOC),AREA=*-*,AREALEN=4               06040000
RPL1_L   EQU   *-RPL1_M                                                 06050000
*********************************************************************** 06060000
*                                                                     * 06070000
*        DYNAMIC STORAGE           <-- R13                            * 06080000
*                                                                     * 06090000
*********************************************************************** 06100000
DYNAM    DSECT                                                          06110000
         DS    18F                     SAVE AREA (MAIN LINE)            06120000
SAVERRTN DS    18F                     SAVE AREA (READ ROUTINE)         06130000
BASEREGS DS    A(VSAMVIEW,VSAMVIEW+4095)                                06140000
TENWORDS DS    10F                                                      06150000
DWD      DS    D                                                        06160000
OWNNAME  DS    CL8                     MY OWN NAME                      06170000
ZERRMSG  DS    C'12345678'             ERROR MESSAGE                    06180000
EDITVIEW DS    C'VIIF'                 VIIF/EDIF                        06190004
READRTNE DS    A(READVS00)             VSAM read routine                06200005
RECSIZE  DS    F                       INVOCATION PARAMETER             06210000
RECSKIP  DS    F                       INVOCATION PARAMETER             06220000
RECCOUNT DS    F                       INVOCATION PARAMETER             06230000
ISPLINK@ DS    V(ISPLINK)              ISPF INTERFACE                   06240000
UNDOSIZE DS    F                       STORAGE FOR SETUNDO STG          06250000
DYNANSWR DS    F                       PARSE                            06260000
ECB1     DS    F                       PARSE                            06270000
VS_TYPE  DS    C'K'                    VSAM TYPE: K E R                 06280000
BAD_TYPE DS    C'(LDS)'                unsupported cluster type         06290006
OPENLIST OPEN  IFGACB,MF=L                                              06300000
         IFGACB DSECT=NO                                                06310000
         IFGRPL DSECT=NO                                                06320000
RECAD    DS    A                       RECORD ADDRESS                   06330000
CURRECNO DS    F'12345678'             CURRENT RECORD NUMBER            06340000
SPANBUFF DS    F,A                     VBS BUFFER                       06350000
*                                                                       06360000
MAXRECNO DS    F'12345678'          +0 MAX RECORD NUMBER                06370000
MAXLRECL DS    F'32760'             +4 MAX LRECL                        06380000
*                                                                       06390000
S99RBPTR DS    A(S99RB+X'80000000')                                     06400000
S99RB    DS    A(X'14012000',0,S99TUPTR,0,0)                            06410000
S99TUPTR DS    4A                                                       06420000
S99T1    DS    X'0055,0001',AL2(L'DDNAME)   RETURN DDNAME               06430000
DDNAME   DS    CL8       '                                              06440000
S99T2    DS    X'0002,0001',AL2(L'DSNAME)   DSNAME                      06450000
DSNAME   DS    CL44,C                       DATA SET NAME               06460000
*                                                                       06470000
         DS    0F                      ALIGN                            06480003
ZENVIR   DS    CL32'ISPF 3.2'          CURRENT ISPF LEVEL               06490004
MESSAGE  DS    CL120                                                    06500000
SHORTMSG DS    CL32                                                     06510005
DYNAML   EQU   *-DYNAM                                                  06520000
         STRING (GENERATE,,LOCTR)                                       06530005
*********************************************************************** 06540000
*                                                                     * 06550000
*        DEFINE INPUT PARAMETERS FOR IKJPARS                          * 06560000
*                                                                     * 06570000
*********************************************************************** 06580000
PCLCSECT IKJPARM                                                        06590000
DSNPCE   IKJPOSIT DSNAME,USID,PROMPT='DATA SET NAME',                  X06600002
               HELP='NAME OF THE VSAM DATA SET TO BE EDITED'            06610000
RECSZPCE IKJKEYWD                                                       06620000
         IKJNAME 'RECSIZE',SUBFLD=RECSZPCL                              06630000
SKIPPCE  IKJKEYWD                                                       06640000
         IKJNAME 'SKIP',SUBFLD=SKIPPCL                                  06650000
COUNTPCE IKJKEYWD                                                       06660000
         IKJNAME 'COUNT',SUBFLD=COUNTPCL                                06670000
*SUB-FIELDS                                                             06680000
RECSZPCL IKJSUBF                                                        06690000
RECSZIDL IKJIDENT 'NUMBER',MAXLNTH=5,FIRST=NUMERIC,OTHER=NUMERIC,      X06700000
               PROMPT='RECORD SIZE',                                   X06710000
               HELP='RECORD SIZE FOR EDIT'                              06720000
SKIPPCL IKJSUBF                                                         06730000
SKIPIDL IKJIDENT 'NUMBER',MAXLNTH=8,FIRST=NUMERIC,OTHER=NUMERIC,       X06740000
               PROMPT='RECORD SKIP',                                   X06750000
               HELP='NUMBER OF RECORDS TO SKIP'                         06760000
COUNTPCL IKJSUBF                                                        06770000
COUNTIDL IKJIDENT 'NUMBER',MAXLNTH=8,FIRST=NUMERIC,OTHER=NUMERIC,      X06780000
               PROMPT='RECORD COUNT',                                  X06790000
               HELP='NUMBER OF RECORDS TO EDIT'                         06800000
         IKJENDP                                                        06810000
*                                                                       06820000
         IKJCPPL                       COMMAND BUFFER PARM LIST         06830000
         IKJPPL                        PARSE PARM LIST (IKJPARS)        06840000
         YREGS                                                          06850000
         IHACDE                                                         06860000
         END                                                            06870000
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR                                  06900001
//         DD DSN=SYS1.MODGEN,DISP=SHR            IFGACB/IFGRPL         06910001
//         DD DSN=CBTTAPE.FILE183.PDS,DISP=SHR    STRING                06920006
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)                                    06930000
//SYSPRINT DD SYSOUT=*                                                  06940000
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),BLKSIZE=3200          06950001
//*-------------------------------------------------------------------  06960000
//LKED    EXEC PGM=HEWL,PARM='LIST,MAP,RENT,REFR'                       06970003
//SYSLIN   DD DSN=*.HLASM.SYSLIN,DISP=(OLD,PASS)                        06980001
//SYSLMOD  DD DSN=CBTTAPE.FILE183.LOAD(VSAMVIEW),DISP=SHR               07010006
//SYSPRINT DD SYSOUT=*                                                  07020000
