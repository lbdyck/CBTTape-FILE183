//GILBERTE JOB (ACCT#),EASYSORT,                                        00010000
// NOTIFY=&SYSUID,                                                      00020000
// CLASS=A,MSGCLASS=H,COND=(0,NE)                                       00030000
//ASMH EXEC PGM=IEV90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)           00040000
         MACRO                                                          00050000
&REF     EASYSORT &FUNC,&WORKA,&EODAD=,&SET=R1,&ERRET=,                X00060004
               &TYPE=F,&LENGTH=80,&FIELDS=(1,80,CH,A),&OPTION=          00070000
.********************************************************************** 00080000
.*                                                                    * 00090004
.*   USAGE:                                                           * 00100004
.*                                                                    * 00110004
.*       EASYSORT OPEN,TYPE=F,LENGTH=64,FIELDS=(1,22,CH,A),         X * 00120004
.*              OPTION='EQUALS,RESINV=500K'                           * 00130004
.*       EASYSORT PUT,(1)                                             * 00140004
.*       EASYSORT GET,SET=R3,EODAD=ENDSORT                            * 00150004
.*       EASYSORT CLOSE                                               * 00160004
.*                                                                    * 00170004
.*       MULTIPLE SORTS IN SAME PROGRAM OK (ONE AT A TIME ONLY)       * 00180004
.*                                                                    * 00190004
.********************************************************************** 00200000
         LCLA  &L                                                       00210000
         LCLC  &LABEL,&STR                                              00220000
&LABEL   SETC  'IHB&SYSNDX'                                             00230000
         AIF   ('&FUNC' EQ 'OPEN').OPEN                                 00240000
         AIF   ('&FUNC' EQ 'PUT').PUT                                   00250000
         AIF   ('&FUNC' EQ 'GET').GET                                   00260000
         AIF   ('&FUNC' EQ 'CLOSE').CLOSE                               00270000
         MNOTE 8,'INVALID FUNCTION REQUESTED &FUNC'                     00280000
&REF     DS    0H                                                       00290000
         MEXIT                                                          00300000
.OPEN    ANOP  ,  ====== OPEN ========                                  00310000
&REF     BAL   R1,&LABEL.L             BRANCH AROUND CONTROL STMTS      00320000
&STR     SETC  ' SORT FIELDS=&FIELDS RECORD TYPE=&TYPE,LENGTH=&LENGTH ' 00330000
&L       SETA  K'&STR                                                   00340000
         AIF   (T'&OPTION EQ 'O').AL2                                   00350000
&STR     SETC  '&STR'.'OPTION '.'&OPTION'(2,K'&OPTION-2)' '             00360000
&L       SETA  K'&STR                                                   00370000
.AL2     DC    Y(&L),C'&STR',0H'0'                                      00380000
.*                                                                      00390000
&LABEL.L L     R15,=A(EZSORT00)                                         00400000
         BALR  R14,R15                 OPEN SORT                        00410000
.********************************************************************** 00420000
         AIF   (D'EZSORT00).NOXXX      JUMP IF NOT FIRST OPEN           00430000
EZSORT00 CSECT                                                          00440000
         STM   R14,R12,12(R13)         SAVE REGISTERS                   00450000
         PUSH  USING                                                    00460000
         BALR  R11,0                   LOCAL BASE                       00470000
         USING *,R11                                                    00480000
         LA    R14,0(,R1)              CLEAN UP HI-ORDER BIT/BYTE       00490000
         LA    R15,SORT$E15            E15 EXIT                         00500000
         LA    R0,SORT$E35             E35 EXIT                         00510000
         LR    R1,R13                  PARM FOR EXIT ROUTINE            00520000
         SLR   R2,R2                                                    00530000
         BCTR  R2,0                    R2='FFFFFFFF' (END OF LIST)      00540000
         STM   R14,R2,SORT$PRM         31-BIT PARM LIST                 00550000
         LA    R1,SORT$PRM             31-BIT PARM LIST                 00560000
.*                                                                      00570000
         ST    R13,SORT$SAV+4          BACKWARD CHAIN                   00580000
         LA    R13,SORT$SAV            SORT SAVE AREA                   00590000
         MVI   0(R13),C'0'             PHASE 0 ENTERED                  00600000
         LINK  EP=SORT                 INVOKE SORT UTILITY              00610000
         L     R13,4(,R13)             RELOAD PROGRAM'S SAVE AREA ADDR  00620000
         LM    R14,R12,12(R13)         RESTORE REGISTERS (GET)          00630000
         SLR   R1,R1                   INVALIDATE RECORD POINTER        00640000
         AIF   (T'&ERRET EQ 'O').ERRET                                  00650002
         LTR   R15,R15                 SORT FAILED?                     00660002
         BNZ   &ERRET                  YES, GO TO ERROR ROUTINE         00670002
.ERRET   ANOP                                                           00680002
         BR    R14                     GOBACK TO PROGRAM (GET)          00690000
         DROP  ,                       DROP R11                         00700000
SORT$E15 STM   R14,R12,12(R13)         SAVE REGISTERS FROM SORT         00710000
         LA    R0,SORT$E15-EZSORT00                                     00720000
         SR    R15,R0                  R15=A(EZSORT00)                  00730000
         USING EZSORT00,R15                                             00740000
.*       LR    R14,R13                                                  00750000
         L     R13,4(,R1)              =A(DYN)                          00760000
.*       ST    R14,SORT$SAV+8                                           00770000
         MVI   SORT$SAV,C'1'           PHASE 1 STARTED                  00780000
         LM    R14,R12,12(R13)         RESTORE PROGRAM'S REGISTERS      00790000
         BR    R14                     GOBACK TO PROGRAM (PUT)          00800000
SORT$PUT STM   R14,R12,12(R13)         SAVE PROGRAM'S REGISTERS         00810000
         L     R13,SORT$SAV+8          SAVE AREA FOR E15                00820000
         LM    R14,R0,12(R13)          RESTORE SORT R14-R0              00830000
         LA    R15,0012                INSERT RECORD REQUEST            00840000
         LM    R2,R12,28(R13)          RESTORE SORT'S R2-R12            00850000
         BR    R14                     GOBACK TO SORT (E15)             00860000
SORT$E35 STM   R14,R12,12(R13)         SAVE REGISTERS FROM SORT         00870000
         LA    R0,SORT$E35-EZSORT00                                     00880000
         SR    R15,R0                  R15=A(EZSORT00)                  00890000
.*       LR    R14,R13                                                  00900000
         L     R13,8(,R1)              =A(DYN)                          00910000
.*       ST    R14,SORT$SAV+8                                           00920000
         ICM   R1,B'1111',0(R1)        ADDR OF SORTED RECORD            00930000
         BZ    SORT$K35                NO MORE RECORDS, TERMINATE E35   00940000
         CLI   SORT$SAV,C'9'           CHECK PHASE 3 ENTERED            00950000
         BE    SORT$K35                JUMP IF SORT CLOSED IN E15       00960000
         LM    R14,R0,12(R13)          PROGRAM'S R14-R0                 00970000
         LM    R2,R12,28(R13)          RESTORE PGM'S R2-R12, PASS R1    00980000
         BR    R14                     GOBACK TO PGM (GET)              00990000
SORT$GET STM   R14,R12,12(R13)         SAVE PROGRAM'S REGISTERS         01000000
         CLI   SORT$SAV,C'3'           CHECK PHASE 3 ENTERED            01010000
         MVI   SORT$SAV,C'3'           SHOW PHASE 3 ENTERED             01020000
         BNE   SORT$RC8                JUMP IF 1ST GET (STILL IN E15)   01030000
         L     R13,SORT$SAV+8          SAVE AREA FOR E15/E35            01040000
         LM    R14,R12,12(R13)         RESTORE REGISTERS                01050000
         LA    R15,0004                DELETE RECORD                    01060000
         BR    R14                     GOBACK TO SORT (E35)             01070000
SORT$CLS CLI   SORT$SAV,C'9'           CLOSE ISSUED ALREADY?            01080000
         BER   R14                     YES, DO NOTHING                  01090000
         STM   R14,R12,12(R13)         SAVE PROGRAM'S REGISTERS         01100000
SORT$K35 MVI   SORT$SAV,C'9'           SHOW CLOSE ISSUED                01110000
SORT$RC8 L     R13,SORT$SAV+8          SAVE AREA FOR E15/E35            01120000
         LM    R14,R12,12(R13)         RESTORE SORT REGISTERS           01130000
         LA    R15,0008                END OF E15/E35 EXIT              01140000
         BR    R14                     GOBACK TO SORT                   01150000
SORT$SAV DS    18F                     SAVE AREA FOR SORT               01160000
SORT$PRM DS    5A                      31-BIT PARM LIST                 01170000
&SYSECT  CSECT                         PROGRAM CSECT                    01180000
         POP   USING                                                    01190000
.NOXXX   MEXIT                                                          01200000
.********************************************************************** 01210000
.*       PUT                                                            01220000
.********************************************************************** 01230000
.PUT     AIF   ('&WORKA'(1,1) EQ '(').PUTREG                            01240000
&REF     LA    R1,&WORKA               GET RECORD ADDRESS               01250000
         AGO   .PUTCOMM                                                 01260000
.PUTREG  AIF   ('&WORKA' EQ '(1)' OR '&WORKA' EQ '(R1)').PUTREG1        01270000
&REF     LR    R1,&WORKA(1)            GET RECORD ADDRESS               01280000
         AGO   .PUTCOMM                                                 01290000
.PUTREG1 ANOP                                                           01300000
&REF     L     R15,=A(EZSORT00)        POINT TO SORT CSECT              01310000
         AGO   .PUTBALR                                                 01320000
.PUTCOMM L     R15,=A(EZSORT00)        POINT TO SORT CSECT              01330000
.PUTBALR BAL   R14,SORT$PUT-EZSORT00(,R15) CALL PUT ROUTINE             01340000
         MEXIT                                                          01350000
.********************************************************************** 01360000
.*       GET                                                            01370000
.********************************************************************** 01380000
.GET     ANOP                                                           01390000
&REF     L     R15,=A(EZSORT00)        POINT TO SORT CSECT              01400000
         BAL   R14,SORT$GET-EZSORT00(,R15) CALL GET ROUTINE             01410000
         LTR   &SET,R1                 CHECK RECORD ADDRESS             01420000
         AIF   (T'&EODAD EQ 'O').GET8                                   01430000
         BZ    &EODAD                  END OF DATA                      01440000
         MEXIT                                                          01450000
.GET8    MNOTE 8,'EODAD PARAMETER MISSING'                              01460000
&REF     DS    0H                                                       01470000
         MEXIT                                                          01480000
.********************************************************************** 01490000
.*       CLOSE                                                          01500000
.********************************************************************** 01510000
.CLOSE   ANOP                                                           01520000
&REF     L     R15,=A(EZSORT00)        POINT TO SORT CSECT              01530000
         BAL   R14,SORT$CLS-EZSORT00(,R15) CALL CLOSE ROUTINE           01540000
.MEND    MEND                                                           01550000
*********************************************************************** 01560001
*                                                                       01570003
*        TEST PROGRAM                                                   01580003
*                                                                       01590003
*********************************************************************** 01600001
         EJECT                                                          01610000
EASYSORT CSECT                                                          01620004
         SAVE  (14,12),,TEST-EASYSORT-&SYSDATE                          01630004
         BALR  R12,0                   BASE REGISTER                    01640000
         USING *,R12                                                    01650000
         ST    R13,SAVEAREA+4          CALLER'S SAVE AREA               01660000
         LA    R13,SAVEAREA            MY OWN SAVE AREA                 01670000
*********************************************************************** 01680000
         OPEN  SYSIN                                                    01690000
         EASYSORT OPEN,TYPE=F,LENGTH=32,FIELDS=(1,12,CH,A)              01700004
GET1     GET   SYSIN                   GET A SYSIN RECORD               01710000
         EASYSORT PUT,(R1)             PASS RECORD TO THE SORT (E15)    01720004
         B     GET1                    GET NEXT RECORD                  01730000
EOD1     CLOSE SYSIN                   CLOSE INPUT FILE                 01740000
         FREEPOOL SYSIN                FREE BUFFERS                     01750000
*********************************************************************** 01760000
         OPEN  (SYSPRINT,EXTEND)                                        01770000
PUT2     EASYSORT GET,SET=R0,EODAD=EOD2 GET SORTED RECORD (E35)         01780004
         PUT   SYSPRINT,(0)            PRINT RECORD                     01790000
         B     PUT2                    LOOP UNTIL LAST RECORD RETURNED  01800000
EOD2     CLOSE SYSPRINT                CLOSE OUTPUT FILE                01810000
         FREEPOOL SYSPRINT             FREE BUFFERS                     01820000
         L     R13,4(,R13)             CALLER'S SAVE AREA               01830000
         RETURN (14,12),RC=00                                           01840000
*********************************************************************** 01850000
SYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=SYSIN,EODAD=EOD1                01860000
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FB,LRECL=32      01870000
SAVEAREA DS    9D                                                       01880000
         YREGS                         REGISTER EQUATES                 01890000
         END                                                            01900003
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR                                  01910000
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)                                    01920003
//SYSPRINT DD SYSOUT=*                                                  01930000
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200      01940003
//*                                                                     01950000
//GO      EXEC PGM=LOADER,PARM=NOPRINT                                  01960000
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,DELETE)                       01970000
//SYSOUT   DD SYSOUT=*                                                  01980000
//SYSPRINT DD SYSOUT=*                                                  01990001
//SYSIN    DD *                                                         02000000
555555555                                                               02010000
444444444444                                                            02020000
333333333333                                                            02030000
